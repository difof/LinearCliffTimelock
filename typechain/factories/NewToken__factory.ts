/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NewToken, NewTokenInterface } from "../NewToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200186d3803806200186d83398181016040528101906200003791906200033a565b6040518060400160405280600881526020017f4e6577546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e544b00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000273565b508060049080519060200190620000d492919062000273565b505050620000e93382620000f060201b60201c565b506200052c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000163576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015a906200039e565b60405180910390fd5b62000177600083836200026960201b60201c565b80600260008282546200018b9190620003ee565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001e29190620003ee565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002499190620003c0565b60405180910390a362000265600083836200026e60201b60201c565b5050565b505050565b505050565b828054620002819062000455565b90600052602060002090601f016020900481019282620002a55760008555620002f1565b82601f10620002c057805160ff1916838001178555620002f1565b82800160010185558215620002f1579182015b82811115620002f0578251825591602001919060010190620002d3565b5b50905062000300919062000304565b5090565b5b808211156200031f57600081600090555060010162000305565b5090565b600081519050620003348162000512565b92915050565b6000602082840312156200034d57600080fd5b60006200035d8482850162000323565b91505092915050565b600062000375601f83620003dd565b91506200038282620004e9565b602082019050919050565b62000398816200044b565b82525050565b60006020820190508181036000830152620003b98162000366565b9050919050565b6000602082019050620003d760008301846200038d565b92915050565b600082825260208201905092915050565b6000620003fb826200044b565b915062000408836200044b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000440576200043f6200048b565b5b828201905092915050565b6000819050919050565b600060028204905060018216806200046e57607f821691505b60208210811415620004855762000484620004ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6200051d816200044b565b81146200052957600080fd5b50565b611331806200053c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb1461023c578063d53913931461026c578063dd62ed3e1461028a578063e63ab1e9146102ba576100cf565b806370a08231146101be57806395d89b41146101ee578063a457c2d71461020c576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d8565b6040516100e99190610ded565b60405180910390f35b61010c60048036038101906101079190610c11565b61036a565b6040516101199190610db7565b60405180910390f35b61012a61038d565b6040516101379190610eef565b60405180910390f35b61015a60048036038101906101559190610bc2565b610397565b6040516101679190610db7565b60405180910390f35b6101786103c6565b6040516101859190610f0a565b60405180910390f35b6101a860048036038101906101a39190610c11565b6103cf565b6040516101b59190610db7565b60405180910390f35b6101d860048036038101906101d39190610b5d565b610406565b6040516101e59190610eef565b60405180910390f35b6101f661044e565b6040516102039190610ded565b60405180910390f35b61022660048036038101906102219190610c11565b6104e0565b6040516102339190610db7565b60405180910390f35b61025660048036038101906102519190610c11565b610557565b6040516102639190610db7565b60405180910390f35b61027461057a565b6040516102819190610dd2565b60405180910390f35b6102a4600480360381019061029f9190610b86565b61059e565b6040516102b19190610eef565b60405180910390f35b6102c2610625565b6040516102cf9190610dd2565b60405180910390f35b6060600380546102e790611029565b80601f016020809104026020016040519081016040528092919081815260200182805461031390611029565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b5050505050905090565b600080610375610649565b9050610382818585610651565b600191505092915050565b6000600254905090565b6000806103a2610649565b90506103af85828561081c565b6103ba8585856108a8565b60019150509392505050565b60006012905090565b6000806103da610649565b90506103fb8185856103ec858961059e565b6103f69190610f41565b610651565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461045d90611029565b80601f016020809104026020016040519081016040528092919081815260200182805461048990611029565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b6000806104eb610649565b905060006104f9828661059e565b90508381101561053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590610ecf565b60405180910390fd5b61054b8286868403610651565b60019250505092915050565b600080610562610649565b905061056f8185856108a8565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b890610eaf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890610e2f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161080f9190610eef565b60405180910390a3505050565b6000610828848461059e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108a25781811015610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088b90610e4f565b60405180910390fd5b6108a18484848403610651565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610918576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090f90610e8f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90610e0f565b60405180910390fd5b610993838383610b29565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090610e6f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aac9190610f41565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b109190610eef565b60405180910390a3610b23848484610b2e565b50505050565b505050565b505050565b600081359050610b42816112cd565b92915050565b600081359050610b57816112e4565b92915050565b600060208284031215610b6f57600080fd5b6000610b7d84828501610b33565b91505092915050565b60008060408385031215610b9957600080fd5b6000610ba785828601610b33565b9250506020610bb885828601610b33565b9150509250929050565b600080600060608486031215610bd757600080fd5b6000610be586828701610b33565b9350506020610bf686828701610b33565b9250506040610c0786828701610b48565b9150509250925092565b60008060408385031215610c2457600080fd5b6000610c3285828601610b33565b9250506020610c4385828601610b48565b9150509250929050565b610c5681610fa9565b82525050565b610c6581610fb5565b82525050565b6000610c7682610f25565b610c808185610f30565b9350610c90818560208601610ff6565b610c99816110b9565b840191505092915050565b6000610cb1602383610f30565b9150610cbc826110ca565b604082019050919050565b6000610cd4602283610f30565b9150610cdf82611119565b604082019050919050565b6000610cf7601d83610f30565b9150610d0282611168565b602082019050919050565b6000610d1a602683610f30565b9150610d2582611191565b604082019050919050565b6000610d3d602583610f30565b9150610d48826111e0565b604082019050919050565b6000610d60602483610f30565b9150610d6b8261122f565b604082019050919050565b6000610d83602583610f30565b9150610d8e8261127e565b604082019050919050565b610da281610fdf565b82525050565b610db181610fe9565b82525050565b6000602082019050610dcc6000830184610c4d565b92915050565b6000602082019050610de76000830184610c5c565b92915050565b60006020820190508181036000830152610e078184610c6b565b905092915050565b60006020820190508181036000830152610e2881610ca4565b9050919050565b60006020820190508181036000830152610e4881610cc7565b9050919050565b60006020820190508181036000830152610e6881610cea565b9050919050565b60006020820190508181036000830152610e8881610d0d565b9050919050565b60006020820190508181036000830152610ea881610d30565b9050919050565b60006020820190508181036000830152610ec881610d53565b9050919050565b60006020820190508181036000830152610ee881610d76565b9050919050565b6000602082019050610f046000830184610d99565b92915050565b6000602082019050610f1f6000830184610da8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f4c82610fdf565b9150610f5783610fdf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f8c57610f8b61105b565b5b828201905092915050565b6000610fa282610fbf565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611014578082015181840152602081019050610ff9565b83811115611023576000848401525b50505050565b6000600282049050600182168061104157607f821691505b602082108114156110555761105461108a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6112d681610f97565b81146112e157600080fd5b50565b6112ed81610fdf565b81146112f857600080fd5b5056fea26469706673582212209509edfa6ae18f25f26b958934b243826a5dc03be21921ccb247455f9991363d64736f6c63430008040033";

export class NewToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NewToken> {
    return super.deploy(initialSupply, overrides || {}) as Promise<NewToken>;
  }
  getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  attach(address: string): NewToken {
    return super.attach(address) as NewToken;
  }
  connect(signer: Signer): NewToken__factory {
    return super.connect(signer) as NewToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewTokenInterface {
    return new utils.Interface(_abi) as NewTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NewToken {
    return new Contract(address, _abi, signerOrProvider) as NewToken;
  }
}
