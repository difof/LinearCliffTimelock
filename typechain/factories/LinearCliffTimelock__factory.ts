/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LinearCliffTimelock,
  LinearCliffTimelockInterface,
} from "../LinearCliffTimelock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cliffStart",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cliffEnd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cliffTimePeriod",
        type: "uint256",
      },
    ],
    name: "OnInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "next",
        type: "uint256",
      },
    ],
    name: "OnWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffEdge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cliffStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliffEnd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cliffTimePeriod",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555061143c806100286000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639130297b116100715780639130297b146101305780639cffd68c1461014e578063a4bc81b81461016c578063b297c55114610188578063b69ef8a8146101a6578063fc0c546a146101c4576100a9565b8063084c28d6146100ae578063158ef93e146100cc57806338af3eed146100ea5780633ccfd60b146101085780635689141214610112575b600080fd5b6100b66101e2565b6040516100c391906110cc565b60405180910390f35b6100d46101e8565b6040516100e19190611039565b60405180910390f35b6100f26101fb565b6040516100ff9190610fbe565b60405180910390f35b610110610221565b005b61011a610840565b60405161012791906110cc565b60405180910390f35b610138610846565b60405161014591906110cc565b60405180910390f35b61015661084c565b60405161016391906110cc565b60405180910390f35b61018660048036038101906101819190610e50565b610852565b005b610190610c50565b60405161019d91906110cc565b60405180910390f35b6101ae610c56565b6040516101bb91906110cc565b60405180910390f35b6101cc610d90565b6040516101d99190611054565b60405180910390f35b60065481565b600860009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e906110ac565b60405180910390fd5b6002600081905550600860009054906101000a900460ff166040518060400160405280601581526020017f4552524f525f4e4f545f494e495449414c495a45440000000000000000000000815250906102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed919061108a565b60405180910390fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280601681526020017f4552524f525f4f4e4c595f42454e454649434941525900000000000000000000815250906103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b6919061108a565b60405180910390fd5b5060006103ca610db6565b90506007548110610612576000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104329190610fbe565b60206040518083038186803b15801561044a57600080fd5b505afa15801561045e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104829190610eee565b9050600081116040518060400160405280600b81526020017f4552524f525f454d505459000000000000000000000000000000000000000000815250906104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f6919061108a565b60405180910390fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161057f929190611010565b602060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610e27565b50807f56f9dfdcc3649f346ec7ca22b3466e7193baf50e84b0bd1245fb2b1a066712de6000604051610603919061106f565b60405180910390a25050610836565b6006548110156040518060400160405280600d81526020017f4552524f525f4e4f545f594554000000000000000000000000000000000000008152509061068f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610686919061108a565b60405180910390fd5b5060006005546004546007546106a5919061121b565b6106af9190611190565b90506000816003546106c19190611190565b905060006001600554600654866106d8919061121b565b6106e29190611190565b6106ec919061113a565b9050600082826106fc91906111c1565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161077d929190611010565b602060405180830381600087803b15801561079757600080fd5b505af11580156107ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cf9190610e27565b50600554826107de91906111c1565b600660008282546107ef919061113a565b92505081905550807f56f9dfdcc3649f346ec7ca22b3466e7193baf50e84b0bd1245fb2b1a066712de60065460405161082891906110cc565b60405180910390a250505050505b6001600081905550565b60035481565b60075481565b60055481565b60026000541415610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f906110ac565b60405180910390fd5b6002600081905550600860009054906101000a900460ff16156040518060400160405280601981526020017f4552524f525f414c52454144595f494e495449414c495a45440000000000000081525090610928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091f919061108a565b60405180910390fd5b5060008184610937919061113a565b9050610941610db6565b8110156040518060400160405280601181526020017f4552524f525f454447455f4c545f4e4f57000000000000000000000000000000815250906109bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b2919061108a565b60405180910390fd5b50828111156040518060400160405280601181526020017f4552524f525f454447455f42545f454e4400000000000000000000000000000081525090610a37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2e919061108a565b60405180910390fd5b508773ffffffffffffffffffffffffffffffffffffffff166323b872dd87308a6040518463ffffffff1660e01b8152600401610a7593929190610fd9565b602060405180830381600087803b158015610a8f57600080fd5b505af1158015610aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac79190610e27565b5084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600381905550836004819055508060068190555082600781905550816005819055506001600860006101000a81548160ff021916908315150217905550600354600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6397ed293160d628342d48a25abb338cfc6f636efc5fe25d71f1e62c4713a4e9600454600754600554604051610c36939291906110e7565b60405180910390a450600160008190555050505050505050565b60045481565b6000600860009054906101000a900460ff166040518060400160405280601581526020017f4552524f525f4e4f545f494e495449414c495a4544000000000000000000000081525090610cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd6919061108a565b60405180910390fd5b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d3b9190610fbe565b60206040518083038186803b158015610d5357600080fd5b505afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190610eee565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b600081359050610dcd816113aa565b92915050565b600081519050610de2816113c1565b92915050565b600081359050610df7816113d8565b92915050565b600081359050610e0c816113ef565b92915050565b600081519050610e21816113ef565b92915050565b600060208284031215610e3957600080fd5b6000610e4784828501610dd3565b91505092915050565b600080600080600080600060e0888a031215610e6b57600080fd5b6000610e798a828b01610de8565b9750506020610e8a8a828b01610dfd565b9650506040610e9b8a828b01610dbe565b9550506060610eac8a828b01610dbe565b9450506080610ebd8a828b01610dfd565b93505060a0610ece8a828b01610dfd565b92505060c0610edf8a828b01610dfd565b91505092959891949750929550565b600060208284031215610f0057600080fd5b6000610f0e84828501610e12565b91505092915050565b610f208161124f565b82525050565b610f2f81611261565b82525050565b610f3e816112a9565b82525050565b610f4d816112cd565b82525050565b6000610f5e8261111e565b610f688185611129565b9350610f788185602086016112df565b610f8181611370565b840191505092915050565b6000610f99601f83611129565b9150610fa482611381565b602082019050919050565b610fb88161129f565b82525050565b6000602082019050610fd36000830184610f17565b92915050565b6000606082019050610fee6000830186610f17565b610ffb6020830185610f17565b6110086040830184610faf565b949350505050565b60006040820190506110256000830185610f17565b6110326020830184610faf565b9392505050565b600060208201905061104e6000830184610f26565b92915050565b60006020820190506110696000830184610f35565b92915050565b60006020820190506110846000830184610f44565b92915050565b600060208201905081810360008301526110a48184610f53565b905092915050565b600060208201905081810360008301526110c581610f8c565b9050919050565b60006020820190506110e16000830184610faf565b92915050565b60006060820190506110fc6000830186610faf565b6111096020830185610faf565b6111166040830184610faf565b949350505050565b600081519050919050565b600082825260208201905092915050565b60006111458261129f565b91506111508361129f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561118557611184611312565b5b828201905092915050565b600061119b8261129f565b91506111a68361129f565b9250826111b6576111b5611341565b5b828204905092915050565b60006111cc8261129f565b91506111d78361129f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112105761120f611312565b5b828202905092915050565b60006112268261129f565b91506112318361129f565b92508282101561124457611243611312565b5b828203905092915050565b600061125a8261127f565b9050919050565b60008115159050919050565b60006112788261124f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112b4826112bb565b9050919050565b60006112c68261127f565b9050919050565b60006112d88261129f565b9050919050565b60005b838110156112fd5780820151818401526020810190506112e2565b8381111561130c576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6113b38161124f565b81146113be57600080fd5b50565b6113ca81611261565b81146113d557600080fd5b50565b6113e18161126d565b81146113ec57600080fd5b50565b6113f88161129f565b811461140357600080fd5b5056fea2646970667358221220e1a37809a2a329c47b483daf05f6f28670156c3daac672949f8cee49f033356064736f6c63430008040033";

export class LinearCliffTimelock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LinearCliffTimelock> {
    return super.deploy(overrides || {}) as Promise<LinearCliffTimelock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LinearCliffTimelock {
    return super.attach(address) as LinearCliffTimelock;
  }
  connect(signer: Signer): LinearCliffTimelock__factory {
    return super.connect(signer) as LinearCliffTimelock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinearCliffTimelockInterface {
    return new utils.Interface(_abi) as LinearCliffTimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinearCliffTimelock {
    return new Contract(address, _abi, signerOrProvider) as LinearCliffTimelock;
  }
}
